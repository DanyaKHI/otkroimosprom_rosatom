// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Toxicity Gateway
 * FastAPI эндпоинт, который проксирует запросы к Triton и возвращает флаг токсичности.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageView } from './MessageView';
import {
    MessageViewFromJSON,
    MessageViewFromJSONTyped,
    MessageViewToJSON,
    MessageViewToJSONTyped,
} from './MessageView';

/**
 * 
 * @export
 * @interface DialogWithMessagesOut
 */
export interface DialogWithMessagesOut {
    /**
     * 
     * @type {number}
     * @memberof DialogWithMessagesOut
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof DialogWithMessagesOut
     */
    category?: string | null;
    /**
     * 
     * @type {Array<MessageView>}
     * @memberof DialogWithMessagesOut
     */
    messages: Array<MessageView>;
}

/**
 * Check if a given object implements the DialogWithMessagesOut interface.
 */
export function instanceOfDialogWithMessagesOut(value: object): value is DialogWithMessagesOut {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('messages' in value) || value['messages'] === undefined) return false;
    return true;
}

export function DialogWithMessagesOutFromJSON(json: any): DialogWithMessagesOut {
    return DialogWithMessagesOutFromJSONTyped(json, false);
}

export function DialogWithMessagesOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): DialogWithMessagesOut {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'category': json['category'] == null ? undefined : json['category'],
        'messages': ((json['messages'] as Array<any>).map(MessageViewFromJSON)),
    };
}

export function DialogWithMessagesOutToJSON(json: any): DialogWithMessagesOut {
    return DialogWithMessagesOutToJSONTyped(json, false);
}

export function DialogWithMessagesOutToJSONTyped(value?: DialogWithMessagesOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': value['category'],
        'messages': ((value['messages'] as Array<any>).map(MessageViewToJSON)),
    };
}

