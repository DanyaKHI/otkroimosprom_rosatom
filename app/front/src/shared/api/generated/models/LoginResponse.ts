// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Toxicity Gateway
 * FastAPI эндпоинт, который проксирует запросы к Triton и возвращает флаг токсичности.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserOut } from './UserOut';
import {
    UserOutFromJSON,
    UserOutFromJSONTyped,
    UserOutToJSON,
    UserOutToJSONTyped,
} from './UserOut';

/**
 * 
 * @export
 * @interface LoginResponse
 */
export interface LoginResponse {
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    access_token: string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    refresh_token: string;
    /**
     * 
     * @type {string}
     * @memberof LoginResponse
     */
    token_type?: string;
    /**
     * 
     * @type {number}
     * @memberof LoginResponse
     */
    expires_at: number;
    /**
     * 
     * @type {number}
     * @memberof LoginResponse
     */
    refresh_expires_at: number;
    /**
     * 
     * @type {UserOut}
     * @memberof LoginResponse
     */
    user: UserOut;
}

/**
 * Check if a given object implements the LoginResponse interface.
 */
export function instanceOfLoginResponse(value: object): value is LoginResponse {
    if (!('access_token' in value) || value['access_token'] === undefined) return false;
    if (!('refresh_token' in value) || value['refresh_token'] === undefined) return false;
    if (!('expires_at' in value) || value['expires_at'] === undefined) return false;
    if (!('refresh_expires_at' in value) || value['refresh_expires_at'] === undefined) return false;
    if (!('user' in value) || value['user'] === undefined) return false;
    return true;
}

export function LoginResponseFromJSON(json: any): LoginResponse {
    return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'access_token': json['access_token'],
        'refresh_token': json['refresh_token'],
        'token_type': json['token_type'] == null ? undefined : json['token_type'],
        'expires_at': json['expires_at'],
        'refresh_expires_at': json['refresh_expires_at'],
        'user': UserOutFromJSON(json['user']),
    };
}

export function LoginResponseToJSON(json: any): LoginResponse {
    return LoginResponseToJSONTyped(json, false);
}

export function LoginResponseToJSONTyped(value?: LoginResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['access_token'],
        'refresh_token': value['refresh_token'],
        'token_type': value['token_type'],
        'expires_at': value['expires_at'],
        'refresh_expires_at': value['refresh_expires_at'],
        'user': UserOutToJSON(value['user']),
    };
}

