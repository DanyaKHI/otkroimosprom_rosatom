// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * Toxicity Gateway
 * FastAPI эндпоинт, который проксирует запросы к Triton и возвращает флаг токсичности.
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserOut
 */
export interface UserOut {
    /**
     * 
     * @type {number}
     * @memberof UserOut
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserOut
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserOut
     */
    email?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserOut
     */
    phone?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UserOut
     */
    role?: number | null;
    /**
     * 
     * @type {string}
     * @memberof UserOut
     */
    status?: string | null;
}

/**
 * Check if a given object implements the UserOut interface.
 */
export function instanceOfUserOut(value: object): value is UserOut {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function UserOutFromJSON(json: any): UserOut {
    return UserOutFromJSONTyped(json, false);
}

export function UserOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserOut {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'role': json['role'] == null ? undefined : json['role'],
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function UserOutToJSON(json: any): UserOut {
    return UserOutToJSONTyped(json, false);
}

export function UserOutToJSONTyped(value?: UserOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'email': value['email'],
        'phone': value['phone'],
        'role': value['role'],
        'status': value['status'],
    };
}

